# Generated by Django 5.1.4 on 2025-01-02 10:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Enter the username', max_length=100)),
                ('password', models.CharField(help_text='Enter the password', max_length=255)),
                ('email', models.EmailField(help_text='Enter the email address', max_length=100, unique=True)),
                ('first_name', models.CharField(help_text='Enter the first name', max_length=100)),
                ('last_name', models.CharField(help_text='Enter the last name', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='IoTDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(help_text='Enter the device ID', max_length=100, unique=True)),
                ('device_name', models.CharField(help_text='Enter the device name', max_length=100)),
                ('device_type', models.CharField(choices=[('sensor', 'Sensor'), ('actuator', 'Actuator')], help_text='Select the device type', max_length=8)),
                ('device_status', models.BooleanField(default=False, help_text='Indicate the device status')),
                ('device_location', models.CharField(help_text='Enter the device location', max_length=100)),
                ('device_last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'IoT Device',
                'verbose_name_plural': 'IoT Devices',
                'ordering': ['device_name'],
            },
        ),
        migrations.CreateModel(
            name='GPIOPin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin_number', models.PositiveIntegerField(unique=True, help_text="Enter the GPIO pin number")),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gpio_pins', to='api.IoTDevice', help_text="Select the associated device")),
            ],
            options={
                'verbose_name': 'GPIO Pin',
                'verbose_name_plural': 'GPIO Pins',
                'ordering': ['pin_number'],
            },
        ),
        migrations.CreateModel(
            name='ActuatorCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('command', models.CharField(help_text='Enter the actuator command', max_length=100)),
                ('device', models.ForeignKey(help_text='Select the associated device', on_delete=django.db.models.deletion.CASCADE, related_name='actuator_commands', to='api.IoTDevice')),
            ],
            options={
                'verbose_name': 'Actuator Command',
                'verbose_name_plural': 'Actuator Commands',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField(help_text='Enter the sensor data in JSON format')),
                ('device', models.ForeignKey(help_text='Select the associated device', on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='api.IoTDevice')),
            ],
            options={
                'verbose_name': 'Sensor Data',
                'verbose_name_plural': 'Sensor Data',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='iotdevice',
            name='device_owner',
            field=models.ForeignKey(help_text='Select the device owner', on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='api.User'),
        ),
    ]